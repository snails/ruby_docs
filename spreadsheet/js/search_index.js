var search_data = {"index":{"searchIndex":["array","spreadsheet","column","compatibility","datatypes","encodings","excel","error","excelcompatibleworkbook","internals","biff5","biff8","offset","reader","biff5","biff8","row","sstentry","workbook","worksheet","writer","biff8","format","workbook","worksheet","font","format","formula","link","parseexcel","parser","worksheet","cell","row","workbook","worksheet","writer","[]()","[]()","[]=()","_unicode_string()","_write_sst()","add_font()","add_format()","add_format()","add_link()","add_shared_string()","add_worksheet()","add_worksheet()","align=()","append_features()","append_features()","biff_version()","binfmt()","bold=()","boolean()","boolean()","border()","border=()","border_color()","border_color=()","boundsheet_size()","cell()","center_across!()","cleanup()","client()","close()","collect_formats()","color()","color_code()","colors()","column()","column()","column_count()","column_updated()","complete_sst_update?()","compress_unicode_string()","content()","continue()","continue_sst()","continue_string()","continue_string_header()","create_worksheet()","cross_down()","data()","date()","date()","date?()","date_base()","date_base()","date_or_time?()","datetime()","datetime()","datetime?()","decode_rk()","default_format()","default_format=()","default_format=()","default_format=()","delete_row()","dimensions()","each()","each()","each()","each()","encode_date()","encode_rk()","encoding()","ensure_rows_read()","enum()","first_unused()","first_used()","font()","font_index()","font_index()","format()","format()","format_column()","format_dates!()","format_updater()","formatted()","formatted_size()","get_next_chunk()","horizontal_align()","horizontal_align()","href()","in_row_block?()","indent()","indent_level()","insert_row()","inspect()","inspect()","inspect()","internal()","italic()","ivar_name()","last_row()","last_row_index()","memoize?()","merge!()","method_name()","name()","need_number?()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_format_column()","num_format()","number_format_index()","offset()","opcode()","open()","open()","parse()","postread_workbook()","postread_worksheet()","rcompact()","rcompact!()","read()","read_blank()","read_bof()","read_boolerr()","read_boundsheet()","read_codepage()","read_colinfo()","read_dimensions()","read_extsst()","read_font()","read_format()","read_formula()","read_hlink()","read_hlink_string()","read_index()","read_label()","read_labelsst()","read_mulblank()","read_mulrk()","read_number()","read_rk()","read_row()","read_rstring()","read_sst()","read_string()","read_string()","read_string_body()","read_string_header()","read_style()","read_window2()","read_workbook()","read_worksheet()","read_xf()","reading_order()","replace_row()","rotation=()","row()","row()","row_blocks()","row_count()","row_updated()","row_updated()","sanitize_worksheets()","set_cell()","set_format()","set_missing_row_address()","set_row_address()","set_row_address()","setup()","shared_string()","shared_string()","size()","sst_index()","sst_size()","strings()","text_direction()","text_direction()","time?()","to_f()","to_i()","to_s()","to_uri()","type()","unicode_string()","uninspect_variables()","update_row()","updated_from()","updater()","updater()","utf8()","value()","version_string()","vertical_align()","weight()","wide()","worksheet()","worksheets()","write()","write()","write()","write_blank()","write_bof()","write_bof()","write_bookbool()","write_boolerr()","write_boundsheets()","write_calccount()","write_cell()","write_cellblocks()","write_changes()","write_changes()","write_colinfo()","write_colinfos()","write_column()","write_datemode()","write_defaultrowheight()","write_defcolwidth()","write_dimensions()","write_dsf()","write_encoding()","write_eof()","write_eof()","write_extsst()","write_font()","write_fonts()","write_formats()","write_formula()","write_from_scratch()","write_from_scratch()","write_hlink()","write_hyperlink_table()","write_iteration()","write_labelsst()","write_mulblank()","write_mulrk()","write_multiples()","write_number()","write_op()","write_op()","write_op()","write_password()","write_placeholder()","write_precision()","write_protect()","write_refmode()","write_refreshall()","write_rk()","write_row()","write_row()","write_rowblock()","write_rows()","write_saverecalc()","write_sst()","write_sst_changes()","write_string_part()","write_styles()","write_tabid()","write_url()","write_window1()","write_window2()","write_workbook()","write_wsbool()","write_xf()","write_xfs()","writer()","writer()","xf_align()","xf_borders()","xf_brdcolors()","xf_indent()","xf_index()","xf_pattern()","xf_rotation()","xf_type_prot()","xf_used_attr()","guide","readme","rakefile"],"longSearchIndex":["array","spreadsheet","spreadsheet::column","spreadsheet::compatibility","spreadsheet::datatypes","spreadsheet::encodings","spreadsheet::excel","spreadsheet::excel::error","spreadsheet::excel::excelcompatibleworkbook","spreadsheet::excel::internals","spreadsheet::excel::internals::biff5","spreadsheet::excel::internals::biff8","spreadsheet::excel::offset","spreadsheet::excel::reader","spreadsheet::excel::reader::biff5","spreadsheet::excel::reader::biff8","spreadsheet::excel::row","spreadsheet::excel::sstentry","spreadsheet::excel::workbook","spreadsheet::excel::worksheet","spreadsheet::excel::writer","spreadsheet::excel::writer::biff8","spreadsheet::excel::writer::format","spreadsheet::excel::writer::workbook","spreadsheet::excel::writer::worksheet","spreadsheet::font","spreadsheet::format","spreadsheet::formula","spreadsheet::link","spreadsheet::parseexcel","spreadsheet::parseexcel::parser","spreadsheet::parseexcel::worksheet","spreadsheet::parseexcel::worksheet::cell","spreadsheet::row","spreadsheet::workbook","spreadsheet::worksheet","spreadsheet::writer","spreadsheet::excel::row#[]()","spreadsheet::worksheet#[]()","spreadsheet::worksheet#[]=()","spreadsheet::excel::writer::biff8#_unicode_string()","spreadsheet::excel::writer::workbook#_write_sst()","spreadsheet::workbook#add_font()","spreadsheet::workbook#add_format()","spreadsheet::worksheet#add_format()","spreadsheet::excel::worksheet#add_link()","spreadsheet::excel::workbook#add_shared_string()","spreadsheet::excel::workbook#add_worksheet()","spreadsheet::workbook#add_worksheet()","spreadsheet::format#align=()","spreadsheet::datatypes::append_features()","spreadsheet::excel::offset::append_features()","spreadsheet::excel::workbook#biff_version()","spreadsheet::excel::internals#binfmt()","spreadsheet::font#bold=()","spreadsheet::datatypes::boolean()","spreadsheet::excel::writer::format::boolean()","spreadsheet::format#border()","spreadsheet::format#border=()","spreadsheet::format#border_color()","spreadsheet::format#border_color=()","spreadsheet::excel::writer::worksheet#boundsheet_size()","spreadsheet::worksheet#cell()","spreadsheet::format#center_across!()","spreadsheet::excel::writer::workbook#cleanup()","spreadsheet::encodings#client()","spreadsheet::excel::excelcompatibleworkbook#close()","spreadsheet::excel::writer::workbook#collect_formats()","spreadsheet::excel::writer::format::color()","spreadsheet::excel::writer::format#color_code()","spreadsheet::datatypes::colors()","spreadsheet::excel::worksheet#column()","spreadsheet::worksheet#column()","spreadsheet::worksheet#column_count()","spreadsheet::worksheet#column_updated()","spreadsheet::excel::writer::workbook#complete_sst_update?()","spreadsheet::excel::writer::biff8#compress_unicode_string()","spreadsheet::excel::sstentry#content()","spreadsheet::excel::sstentry#continue()","spreadsheet::excel::reader::biff8#continue_sst()","spreadsheet::excel::reader::biff8#continue_string()","spreadsheet::excel::reader::biff8#continue_string_header()","spreadsheet::workbook#create_worksheet()","spreadsheet::format#cross_down()","spreadsheet::excel::writer::worksheet#data()","spreadsheet::excel::row#date()","spreadsheet::parseexcel::worksheet::cell#date()","spreadsheet::format#date?()","spreadsheet::excel::workbook#date_base()","spreadsheet::excel::worksheet#date_base()","spreadsheet::format#date_or_time?()","spreadsheet::excel::row#datetime()","spreadsheet::parseexcel::worksheet::cell#datetime()","spreadsheet::format#datetime?()","spreadsheet::excel::reader#decode_rk()","spreadsheet::worksheet#default_format()","spreadsheet::column#default_format=()","spreadsheet::row#default_format=()","spreadsheet::worksheet#default_format=()","spreadsheet::worksheet#delete_row()","spreadsheet::worksheet#dimensions()","spreadsheet::column#each()","spreadsheet::excel::row#each()","spreadsheet::excel::worksheet#each()","spreadsheet::worksheet#each()","spreadsheet::excel::writer::worksheet#encode_date()","spreadsheet::excel::writer::worksheet#encode_rk()","spreadsheet::excel::reader#encoding()","spreadsheet::excel::worksheet#ensure_rows_read()","spreadsheet::datatypes::enum()","spreadsheet::row#first_unused()","spreadsheet::row#first_used()","spreadsheet::workbook#font()","spreadsheet::excel::writer::format#font_index()","spreadsheet::excel::writer::workbook#font_index()","spreadsheet::row#format()","spreadsheet::workbook#format()","spreadsheet::worksheet#format_column()","spreadsheet::worksheet#format_dates!()","spreadsheet::row::format_updater()","spreadsheet::row#formatted()","spreadsheet::row#formatted_size()","spreadsheet::excel::reader#get_next_chunk()","spreadsheet::excel::writer::format#horizontal_align()","spreadsheet::format#horizontal_align()","spreadsheet::link#href()","spreadsheet::excel::reader#in_row_block?()","spreadsheet::format#indent()","spreadsheet::format#indent_level()","spreadsheet::worksheet#insert_row()","spreadsheet::row#inspect()","spreadsheet::workbook#inspect()","spreadsheet::worksheet#inspect()","spreadsheet::encodings#internal()","spreadsheet::font#italic()","spreadsheet::compatibility#ivar_name()","spreadsheet::worksheet#last_row()","spreadsheet::worksheet#last_row_index()","spreadsheet::excel::reader#memoize?()","spreadsheet::format#merge!()","spreadsheet::compatibility#method_name()","spreadsheet::excel::writer::worksheet#name()","spreadsheet::excel::writer::worksheet#need_number?()","spreadsheet::column::new()","spreadsheet::excel::new()","spreadsheet::excel::error::new()","spreadsheet::excel::excelcompatibleworkbook::new()","spreadsheet::excel::offset::new()","spreadsheet::excel::reader::new()","spreadsheet::excel::sstentry::new()","spreadsheet::excel::workbook::new()","spreadsheet::excel::worksheet::new()","spreadsheet::excel::writer::format::new()","spreadsheet::excel::writer::workbook::new()","spreadsheet::excel::writer::worksheet::new()","spreadsheet::font::new()","spreadsheet::format::new()","spreadsheet::link::new()","spreadsheet::parseexcel::worksheet::cell::new()","spreadsheet::row::new()","spreadsheet::workbook::new()","spreadsheet::worksheet::new()","spreadsheet::writer::new()","spreadsheet::worksheet#new_format_column()","spreadsheet::excel::writer::format#num_format()","spreadsheet::excel::writer::workbook#number_format_index()","spreadsheet::excel::offset::offset()","spreadsheet::excel::internals#opcode()","spreadsheet::open()","spreadsheet::excel::workbook::open()","spreadsheet::parseexcel::parse()","spreadsheet::excel::reader#postread_workbook()","spreadsheet::excel::reader#postread_worksheet()","array#rcompact()","array#rcompact!()","spreadsheet::excel::reader#read()","spreadsheet::excel::reader#read_blank()","spreadsheet::excel::reader#read_bof()","spreadsheet::excel::reader#read_boolerr()","spreadsheet::excel::reader#read_boundsheet()","spreadsheet::excel::reader#read_codepage()","spreadsheet::excel::reader#read_colinfo()","spreadsheet::excel::reader#read_dimensions()","spreadsheet::excel::reader::biff8#read_extsst()","spreadsheet::excel::reader#read_font()","spreadsheet::excel::reader#read_format()","spreadsheet::excel::reader#read_formula()","spreadsheet::excel::reader#read_hlink()","spreadsheet::excel::reader#read_hlink_string()","spreadsheet::excel::reader#read_index()","spreadsheet::excel::reader#read_label()","spreadsheet::excel::reader#read_labelsst()","spreadsheet::excel::reader#read_mulblank()","spreadsheet::excel::reader#read_mulrk()","spreadsheet::excel::reader#read_number()","spreadsheet::excel::reader#read_rk()","spreadsheet::excel::reader#read_row()","spreadsheet::excel::reader#read_rstring()","spreadsheet::excel::reader::biff8#read_sst()","spreadsheet::excel::reader::biff5#read_string()","spreadsheet::excel::reader::biff8#read_string()","spreadsheet::excel::reader::biff8#read_string_body()","spreadsheet::excel::reader::biff8#read_string_header()","spreadsheet::excel::reader#read_style()","spreadsheet::excel::reader#read_window2()","spreadsheet::excel::reader#read_workbook()","spreadsheet::excel::reader#read_worksheet()","spreadsheet::excel::reader#read_xf()","spreadsheet::format#reading_order()","spreadsheet::worksheet#replace_row()","spreadsheet::format#rotation=()","spreadsheet::excel::worksheet#row()","spreadsheet::worksheet#row()","spreadsheet::excel::writer::worksheet#row_blocks()","spreadsheet::worksheet#row_count()","spreadsheet::excel::worksheet#row_updated()","spreadsheet::worksheet#row_updated()","spreadsheet::excel::writer::workbook#sanitize_worksheets()","spreadsheet::excel::reader#set_cell()","spreadsheet::row#set_format()","spreadsheet::excel::reader#set_missing_row_address()","spreadsheet::excel::reader#set_row_address()","spreadsheet::excel::worksheet#set_row_address()","spreadsheet::excel::reader#setup()","spreadsheet::excel::workbook#shared_string()","spreadsheet::excel::worksheet#shared_string()","spreadsheet::excel::writer::worksheet#size()","spreadsheet::excel::writer::workbook#sst_index()","spreadsheet::excel::workbook#sst_size()","spreadsheet::excel::writer::worksheet#strings()","spreadsheet::excel::writer::format#text_direction()","spreadsheet::format#text_direction()","spreadsheet::format#time?()","spreadsheet::parseexcel::worksheet::cell#to_f()","spreadsheet::parseexcel::worksheet::cell#to_i()","spreadsheet::parseexcel::worksheet::cell#to_s()","spreadsheet::link#to_uri()","spreadsheet::parseexcel::worksheet::cell#type()","spreadsheet::excel::writer::biff8#unicode_string()","spreadsheet::excel::workbook#uninspect_variables()","spreadsheet::worksheet#update_row()","spreadsheet::worksheet#updated_from()","spreadsheet::column::updater()","spreadsheet::row::updater()","spreadsheet::encodings#utf8()","spreadsheet::excel::error#value()","spreadsheet::excel::workbook#version_string()","spreadsheet::excel::writer::format#vertical_align()","spreadsheet::font#weight()","spreadsheet::excel::reader::biff8#wide()","spreadsheet::workbook#worksheet()","spreadsheet::excel::writer::workbook#worksheets()","spreadsheet::workbook#write()","spreadsheet::worksheet#write()","spreadsheet::writer#write()","spreadsheet::excel::writer::worksheet#write_blank()","spreadsheet::excel::writer::workbook#write_bof()","spreadsheet::excel::writer::worksheet#write_bof()","spreadsheet::excel::writer::workbook#write_bookbool()","spreadsheet::excel::writer::worksheet#write_boolerr()","spreadsheet::excel::writer::workbook#write_boundsheets()","spreadsheet::excel::writer::worksheet#write_calccount()","spreadsheet::excel::writer::worksheet#write_cell()","spreadsheet::excel::writer::worksheet#write_cellblocks()","spreadsheet::excel::writer::workbook#write_changes()","spreadsheet::excel::writer::worksheet#write_changes()","spreadsheet::excel::writer::worksheet#write_colinfo()","spreadsheet::excel::writer::worksheet#write_colinfos()","spreadsheet::worksheet#write_column()","spreadsheet::excel::writer::workbook#write_datemode()","spreadsheet::excel::writer::worksheet#write_defaultrowheight()","spreadsheet::excel::writer::worksheet#write_defcolwidth()","spreadsheet::excel::writer::worksheet#write_dimensions()","spreadsheet::excel::writer::workbook#write_dsf()","spreadsheet::excel::writer::workbook#write_encoding()","spreadsheet::excel::writer::workbook#write_eof()","spreadsheet::excel::writer::worksheet#write_eof()","spreadsheet::excel::writer::workbook#write_extsst()","spreadsheet::excel::writer::workbook#write_font()","spreadsheet::excel::writer::workbook#write_fonts()","spreadsheet::excel::writer::workbook#write_formats()","spreadsheet::excel::writer::worksheet#write_formula()","spreadsheet::excel::writer::workbook#write_from_scratch()","spreadsheet::excel::writer::worksheet#write_from_scratch()","spreadsheet::excel::writer::worksheet#write_hlink()","spreadsheet::excel::writer::worksheet#write_hyperlink_table()","spreadsheet::excel::writer::worksheet#write_iteration()","spreadsheet::excel::writer::worksheet#write_labelsst()","spreadsheet::excel::writer::worksheet#write_mulblank()","spreadsheet::excel::writer::worksheet#write_mulrk()","spreadsheet::excel::writer::worksheet#write_multiples()","spreadsheet::excel::writer::worksheet#write_number()","spreadsheet::excel::writer::format#write_op()","spreadsheet::excel::writer::workbook#write_op()","spreadsheet::excel::writer::worksheet#write_op()","spreadsheet::excel::writer::workbook#write_password()","spreadsheet::excel::writer::workbook#write_placeholder()","spreadsheet::excel::writer::workbook#write_precision()","spreadsheet::excel::writer::workbook#write_protect()","spreadsheet::excel::writer::worksheet#write_refmode()","spreadsheet::excel::writer::workbook#write_refreshall()","spreadsheet::excel::writer::worksheet#write_rk()","spreadsheet::excel::writer::worksheet#write_row()","spreadsheet::worksheet#write_row()","spreadsheet::excel::writer::worksheet#write_rowblock()","spreadsheet::excel::writer::worksheet#write_rows()","spreadsheet::excel::writer::worksheet#write_saverecalc()","spreadsheet::excel::writer::workbook#write_sst()","spreadsheet::excel::writer::workbook#write_sst_changes()","spreadsheet::excel::writer::workbook#write_string_part()","spreadsheet::excel::writer::workbook#write_styles()","spreadsheet::excel::writer::workbook#write_tabid()","spreadsheet::worksheet#write_url()","spreadsheet::excel::writer::workbook#write_window1()","spreadsheet::excel::writer::worksheet#write_window2()","spreadsheet::excel::writer::workbook#write_workbook()","spreadsheet::excel::writer::worksheet#write_wsbool()","spreadsheet::excel::writer::format#write_xf()","spreadsheet::excel::writer::workbook#write_xfs()","spreadsheet::writer()","spreadsheet::workbook#writer()","spreadsheet::excel::writer::format#xf_align()","spreadsheet::excel::writer::format#xf_borders()","spreadsheet::excel::writer::format#xf_brdcolors()","spreadsheet::excel::writer::format#xf_indent()","spreadsheet::excel::writer::workbook#xf_index()","spreadsheet::excel::writer::format#xf_pattern()","spreadsheet::excel::writer::format#xf_rotation()","spreadsheet::excel::writer::format#xf_type_prot()","spreadsheet::excel::writer::format#xf_used_attr()","","",""],"info":[["Array","","classes/Array.html","",""],["Spreadsheet","","classes/Spreadsheet.html","","<p>Spreadsheet::Excel Compatibility Layer. Drop-in replacement for\nSpreadsheet::Excel version &lt;= 0.3.5.1 …\n"],["Spreadsheet::Column","","classes/Spreadsheet/Column.html","","<p>The Column class. Encapsulates column-formatting and width, and provides a\nmeans to iterate over all …\n"],["Spreadsheet::Compatibility","","classes/Spreadsheet/Compatibility.html","",""],["Spreadsheet::Datatypes","","classes/Spreadsheet/Datatypes.html","","<p>This module defines convenience-methods for the definition of Spreadsheet\nattributes (boolean, colors …\n"],["Spreadsheet::Encodings","","classes/Spreadsheet/Encodings.html","","<p>Methods for Encoding-conversions. You should not need to use any of these.\n"],["Spreadsheet::Excel","","classes/Spreadsheet/Excel.html","",""],["Spreadsheet::Excel::Error","","classes/Spreadsheet/Excel/Error.html","","<p>This class encapsulates Excel Error-Codes\n"],["Spreadsheet::Excel::ExcelCompatibleWorkbook","","classes/Spreadsheet/Excel/ExcelCompatibleWorkbook.html","",""],["Spreadsheet::Excel::Internals","","classes/Spreadsheet/Excel/Internals.html","","<p>Binary Formats and other configurations internal to Excel. This Module is\nlikely to shrink as Support …\n"],["Spreadsheet::Excel::Internals::Biff5","","classes/Spreadsheet/Excel/Internals/Biff5.html","","<p>Binary Formats and other configurations internal to Biff5. This Module is\nlikely to be expanded as Support …\n"],["Spreadsheet::Excel::Internals::Biff8","","classes/Spreadsheet/Excel/Internals/Biff8.html","","<p>Binary Formats and other configurations internal to Biff8. This Module is\nlikely to be expanded as Support …\n"],["Spreadsheet::Excel::Offset","","classes/Spreadsheet/Excel/Offset.html","","<p>This module is used to keep track of offsets in modified Excel documents.\nConsidered internal and subject …\n"],["Spreadsheet::Excel::Reader","","classes/Spreadsheet/Excel/Reader.html","","<p>Reader class for Excel Workbooks. Most read_* method correspond to an\nExcel-Record/Opcode. You should …\n"],["Spreadsheet::Excel::Reader::Biff5","","classes/Spreadsheet/Excel/Reader/Biff5.html","","<p>This Module collects reader methods such as read_string that are specific\nto Biff5.  This Module is likely …\n"],["Spreadsheet::Excel::Reader::Biff8","","classes/Spreadsheet/Excel/Reader/Biff8.html","","<p>This Module collects reader methods such as read_string that are specific\nto Biff8.  This Module is likely …\n"],["Spreadsheet::Excel::Row","","classes/Spreadsheet/Excel/Row.html","","<p>Excel-specific Row methods\n"],["Spreadsheet::Excel::SstEntry","","classes/Spreadsheet/Excel/SstEntry.html","","<p>Shared String Table Entry\n"],["Spreadsheet::Excel::Workbook","","classes/Spreadsheet/Excel/Workbook.html","","<p>Excel-specific Workbook methods. These are mostly pertinent to the Excel\nreader. You should have no reason …\n"],["Spreadsheet::Excel::Worksheet","","classes/Spreadsheet/Excel/Worksheet.html","","<p>Excel-specific Worksheet methods. These are mostly pertinent to the Excel\nreader, and to recording changes …\n"],["Spreadsheet::Excel::Writer","","classes/Spreadsheet/Excel/Writer.html","",""],["Spreadsheet::Excel::Writer::Biff8","","classes/Spreadsheet/Excel/Writer/Biff8.html","","<p>This Module collects writer methods such as unicode_string that are\nspecific to Biff8. This Module is …\n"],["Spreadsheet::Excel::Writer::Format","","classes/Spreadsheet/Excel/Writer/Format.html","","<p>This class encapsulates everything that is needed to write an XF record.\n"],["Spreadsheet::Excel::Writer::Workbook","","classes/Spreadsheet/Excel/Writer/Workbook.html","","<p>Writer class for Excel Workbooks. Most write_* method correspond to an\nExcel-Record/Opcode. Designed …\n"],["Spreadsheet::Excel::Writer::Worksheet","","classes/Spreadsheet/Excel/Writer/Worksheet.html","","<p>Writer class for Excel Worksheets. Most write_* method correspond to an\nExcel-Record/Opcode. You should …\n"],["Spreadsheet::Font","","classes/Spreadsheet/Font.html","","<p>Font formatting data\n"],["Spreadsheet::Format","","classes/Spreadsheet/Format.html","","<p>Formatting data\n"],["Spreadsheet::Formula","","classes/Spreadsheet/Formula.html","","<p>Formula implementation. At the moment this is just a placeholder. You may\naccess the last calculated …\n"],["Spreadsheet::Link","","classes/Spreadsheet/Link.html","","<p>The Link class. Is a Subclass of String, which lets you treat a Cell that\ncontains a Link just as if …\n"],["Spreadsheet::ParseExcel","","classes/Spreadsheet/ParseExcel.html","","<p>The ParseExcel module is provided as a drop-in replacement for the\nParseExcel library. This code is deprecated …\n"],["Spreadsheet::ParseExcel::Parser","","classes/Spreadsheet/ParseExcel/Parser.html","",""],["Spreadsheet::ParseExcel::Worksheet","","classes/Spreadsheet/ParseExcel/Worksheet.html","",""],["Spreadsheet::ParseExcel::Worksheet::Cell","","classes/Spreadsheet/ParseExcel/Worksheet/Cell.html","",""],["Spreadsheet::Row","","classes/Spreadsheet/Row.html","","<p>The Row class. Encapsulates Cell data and formatting. Since Row is a\nsubclass of Array, you may use all …\n"],["Spreadsheet::Workbook","","classes/Spreadsheet/Workbook.html","","<p>The Workbook class represents a Spreadsheet-Document and is the entry point\nfor all Spreadsheet manipulation. …\n"],["Spreadsheet::Worksheet","","classes/Spreadsheet/Worksheet.html","","<p>The Worksheet class. Contains most of the Spreadsheet data in Rows.\n<p>Interesting Attributes\n<p>#name       … &mdash; "],["Spreadsheet::Writer","","classes/Spreadsheet/Writer.html","","<p>Parent Class for all Writers. Implements the copying of unmodified\nSpreadsheet documents.\n"],["[]","Spreadsheet::Excel::Row","classes/Spreadsheet/Excel/Row.html#method-i-5B-5D","(idx, len=nil)","<p>Access data in this Row like you would in an Array. If a cell is formatted\nas a Date or DateTime, the …\n"],["[]","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-5B-5D","(row, column)","<p>Get the enriched value of the Cell at <em>row</em>, <em>column</em>. See\nalso Worksheet#cell, Row#[].\n"],["[]=","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-5B-5D-3D","(row, column, value)","<p>Set the value of the Cell at <em>row</em>, <em>column</em> to\n<em>value</em>. See also Row#[]=.\n"],["_unicode_string","Spreadsheet::Excel::Writer::Biff8","classes/Spreadsheet/Excel/Writer/Biff8.html#method-i-_unicode_string","(string, count_length=1)","<p>Encode <em>string</em> into a Biff8 Unicode String Header and Body.\n"],["_write_sst","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-_write_sst","(workbook, writer, offset, total, strings)",""],["add_font","Spreadsheet::Workbook","classes/Spreadsheet/Workbook.html#method-i-add_font","(font)","<p>Add a Font to the Workbook. Used by the parser. You should not need to use\nthis Method.\n"],["add_format","Spreadsheet::Workbook","classes/Spreadsheet/Workbook.html#method-i-add_format","(format)","<p>Add a Format to the Workbook. If you use Row#set_format, you should not\nneed to use this Method.\n"],["add_format","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-add_format","(fmt)","<p>Add a Format to the Workbook. If you use Row#set_format, you should not\nneed to use this Method.\n"],["add_link","Spreadsheet::Excel::Worksheet","classes/Spreadsheet/Excel/Worksheet.html#method-i-add_link","(row, column, link)",""],["add_shared_string","Spreadsheet::Excel::Workbook","classes/Spreadsheet/Excel/Workbook.html#method-i-add_shared_string","(str)",""],["add_worksheet","Spreadsheet::Excel::Workbook","classes/Spreadsheet/Excel/Workbook.html#method-i-add_worksheet","(worksheet)",""],["add_worksheet","Spreadsheet::Workbook","classes/Spreadsheet/Workbook.html#method-i-add_worksheet","(worksheet)","<p>Add a Worksheet to the Workbook.\n"],["align=","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-align-3D","(location)","<p>Combined method for both horizontal and vertical alignment. Sets the first\nvalid value (e.g. Format#align …\n"],["append_features","Spreadsheet::Datatypes","classes/Spreadsheet/Datatypes.html#method-c-append_features","(mod)",""],["append_features","Spreadsheet::Excel::Offset","classes/Spreadsheet/Excel/Offset.html#method-c-append_features","(mod)",""],["biff_version","Spreadsheet::Excel::Workbook","classes/Spreadsheet/Excel/Workbook.html#method-i-biff_version","()",""],["binfmt","Spreadsheet::Excel::Internals","classes/Spreadsheet/Excel/Internals.html#method-i-binfmt","(key)",""],["bold=","Spreadsheet::Font","classes/Spreadsheet/Font.html#method-i-bold-3D","(bool)","<p>Sets #weight to :bold if(<em>bool</em>), :normal otherwise.\n"],["boolean","Spreadsheet::Datatypes","classes/Spreadsheet/Datatypes.html#method-c-boolean","(*args)","<p>Define instance methods to read and write boolean attributes.\n"],["boolean","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-c-boolean","(*args)",""],["border","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-border","()","<p>Returns an Array containing the status of the four borders: bottom, top,\nright, left\n"],["border=","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-border-3D","(boolean)","<p>Activate or deactivate all four borders (left, right, top, bottom)\n"],["border_color","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-border_color","()","<p>Returns an Array containing the colors of the four borders: bottom, top,\nright, left\n"],["border_color=","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-border_color-3D","(color)","<p>Set all four border colors to <em>color</em> (left, right, top, bottom)\n"],["boundsheet_size","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-boundsheet_size","()","<p>The number of bytes needed to write a Boundsheet record for this Worksheet\nUsed by Writer::Worksheet …\n"],["cell","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-cell","(row, column)","<p>Get the enriched value of the Cell at <em>row</em>, <em>column</em>. See\nalso Worksheet#[], Row#[].\n"],["center_across!","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-center_across-21","()","<p>Backward compatibility method. May disappear at some point in the future.\n"],["cleanup","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-cleanup","(workbook)",""],["client","Spreadsheet::Encodings","classes/Spreadsheet/Encodings.html#method-i-client","(string, internal='UTF-16LE')",""],["close","Spreadsheet::Excel::ExcelCompatibleWorkbook","classes/Spreadsheet/Excel/ExcelCompatibleWorkbook.html#method-i-close","()",""],["collect_formats","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-collect_formats","(workbook, opts={})",""],["color","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-c-color","(key, default)",""],["color_code","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-color_code","(color)",""],["colors","Spreadsheet::Datatypes","classes/Spreadsheet/Datatypes.html#method-c-colors","(*args)","<p>Define instance methods to read and write color attributes. For valid\ncolors see COLORS\n"],["column","Spreadsheet::Excel::Worksheet","classes/Spreadsheet/Excel/Worksheet.html#method-i-column","(idx)",""],["column","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-column","(idx)","<p>Returns the Column at <em>idx</em>.\n"],["column_count","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-column_count","()","<p>The number of columns in this Worksheet which contain data.\n"],["column_updated","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-column_updated","(idx, column)",""],["complete_sst_update?","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-complete_sst_update-3F","(workbook)",""],["compress_unicode_string","Spreadsheet::Excel::Writer::Biff8","classes/Spreadsheet/Excel/Writer/Biff8.html#method-i-compress_unicode_string","(data)","<p>Check whether the string <em>data</em> can be compressed (i.e. every second\nbyte is a Null-byte) and perform compression. …\n"],["content","Spreadsheet::Excel::SstEntry","classes/Spreadsheet/Excel/SstEntry.html#method-i-content","()","<p>Access the contents of this Shared String\n"],["continue","Spreadsheet::Excel::SstEntry","classes/Spreadsheet/Excel/SstEntry.html#method-i-continue","(offset, size, chars)","<p>Register the offset of a String continuation\n"],["continue_sst","Spreadsheet::Excel::Reader::Biff8","classes/Spreadsheet/Excel/Reader/Biff8.html#method-i-continue_sst","(work, oppos, len)","<p>Read more data into the Shared String Table. (see also: #read_sst) This\nmethod only evaluates the header, …\n"],["continue_string","Spreadsheet::Excel::Reader::Biff8","classes/Spreadsheet/Excel/Reader/Biff8.html#method-i-continue_string","(work, incomplete_string=@incomplete_string)","<p>When a String is too long for one Opcode, it is continued in a Continue\nOpcode. Excel may reconsider …\n"],["continue_string_header","Spreadsheet::Excel::Reader::Biff8","classes/Spreadsheet/Excel/Reader/Biff8.html#method-i-continue_string_header","(work, oppos)","<p>When a String is too long for one Opcode, it is continued in a Continue\nOpcode. Excel may reconsider …\n"],["create_worksheet","Spreadsheet::Workbook","classes/Spreadsheet/Workbook.html#method-i-create_worksheet","(opts = {})","<p>Create a new Worksheet in this Workbook. Used without options this creates\na Worksheet with the name …\n"],["cross_down","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-cross_down","","<p>You can set the following boolean attributes:\n<p>#cross_down &mdash; Draws a Line from the top-left to the bottom-right …\n"],["data","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-data","()",""],["date","Spreadsheet::Excel::Row","classes/Spreadsheet/Excel/Row.html#method-i-date","(idx)","<p>Force convert the cell at <em>idx</em> to a Date\n"],["date","Spreadsheet::ParseExcel::Worksheet::Cell","classes/Spreadsheet/ParseExcel/Worksheet/Cell.html#method-i-date","()",""],["date?","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-date-3F","()","<p>Is the cell formatted as a Date?\n"],["date_base","Spreadsheet::Excel::Workbook","classes/Spreadsheet/Excel/Workbook.html#method-i-date_base","()",""],["date_base","Spreadsheet::Excel::Worksheet","classes/Spreadsheet/Excel/Worksheet.html#method-i-date_base","()",""],["date_or_time?","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-date_or_time-3F","()","<p>Is the cell formatted as a Date or Time?\n"],["datetime","Spreadsheet::Excel::Row","classes/Spreadsheet/Excel/Row.html#method-i-datetime","(idx)","<p>Force convert the cell at <em>idx</em> to a DateTime\n"],["datetime","Spreadsheet::ParseExcel::Worksheet::Cell","classes/Spreadsheet/ParseExcel/Worksheet/Cell.html#method-i-datetime","()",""],["datetime?","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-datetime-3F","()","<p>Is the cell formatted as a DateTime?\n"],["decode_rk","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-decode_rk","(work)",""],["default_format","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-default_format","()","<p>The default Format of this Worksheet, if you have set one. Returns the\nWorkbook’s default Format otherwise. …\n"],["default_format=","Spreadsheet::Column","classes/Spreadsheet/Column.html#method-i-default_format-3D","(format)","<p>Set the default Format for Cells in this Column.\n"],["default_format=","Spreadsheet::Row","classes/Spreadsheet/Row.html#method-i-default_format-3D","(format)","<p>Set the default Format used when writing a Cell if no explicit Format is\nstored for the cell.\n"],["default_format=","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-default_format-3D","(format)","<p>Set the default Format of this Worksheet.\n"],["delete_row","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-delete_row","(idx)","<p>Delete the Row at <em>idx</em> (0-based) from this Worksheet.\n"],["dimensions","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-dimensions","()","<p>Dimensions &mdash; [ first used row, first unused row, first used column, first unused column\n] ( First used …\n\n"],["each","Spreadsheet::Column","classes/Spreadsheet/Column.html#method-i-each","()","<p>Iterate over all cells in this column.\n"],["each","Spreadsheet::Excel::Row","classes/Spreadsheet/Excel/Row.html#method-i-each","(&block)",""],["each","Spreadsheet::Excel::Worksheet","classes/Spreadsheet/Excel/Worksheet.html#method-i-each","(*args)",""],["each","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-each","(skip=dimensions[0], &block)","<p>If no argument is given, #each iterates over all used Rows (from the first\nused Row until but omitting …\n"],["encode_date","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-encode_date","(date)",""],["encode_rk","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-encode_rk","(value)",""],["encoding","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-encoding","(codepage_id)",""],["ensure_rows_read","Spreadsheet::Excel::Worksheet","classes/Spreadsheet/Excel/Worksheet.html#method-i-ensure_rows_read","()",""],["enum","Spreadsheet::Datatypes","classes/Spreadsheet/Datatypes.html#method-c-enum","(key, *values)","<p>Define instance methods to read and write enumeration attributes.\n<p>The first argument designates the attribute …\n"],["first_unused","Spreadsheet::Row","classes/Spreadsheet/Row.html#method-i-first_unused","()","<p>#first_unused (really last used + 1) - the 0-based index of the first of\nall remaining contiguous blank …\n"],["first_used","Spreadsheet::Row","classes/Spreadsheet/Row.html#method-i-first_used","()","<p>first_used the 0-based index of the first non-blank Cell.\n"],["font","Spreadsheet::Workbook","classes/Spreadsheet/Workbook.html#method-i-font","(idx)","<p>The Font at <em>idx</em>\n"],["font_index","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-font_index","()",""],["font_index","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-font_index","(workbook, font_key)",""],["format","Spreadsheet::Row","classes/Spreadsheet/Row.html#method-i-format","(idx)","<p>The Format for the Cell at <em>idx</em> (0-based), or the first valid\nFormat in Row#default_format, Column#default_format …\n"],["format","Spreadsheet::Workbook","classes/Spreadsheet/Workbook.html#method-i-format","(idx)","<p>The Format at <em>idx</em>, or - if <em>idx</em> is a String - the Format\nwith name == <em>idx</em>\n"],["format_column","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-format_column","(column, width=nil, format=nil)",""],["format_dates!","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-format_dates-21","(format=nil)","<p>Formats all Date, DateTime and Time cells with <em>format</em> or the\ndefault formats:\n<p>‘DD.MM.YYYY’ for Date\n<p>‘DD …\n"],["format_updater","Spreadsheet::Row","classes/Spreadsheet/Row.html#method-c-format_updater","(*keys)",""],["formatted","Spreadsheet::Row","classes/Spreadsheet/Row.html#method-i-formatted","()","<p>Returns a copy of self with nil-values appended for empty cells that have\nan associated Format. This …\n"],["formatted_size","Spreadsheet::Row","classes/Spreadsheet/Row.html#method-i-formatted_size","()","<p>Same as Row#size, but takes into account formatted empty cells\n"],["get_next_chunk","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-get_next_chunk","()",""],["horizontal_align","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-horizontal_align","()",""],["horizontal_align","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-horizontal_align","","<p>Horizontal alignment Valid values: :default, :left, :center, :right, :fill,\n:justify, :merge,\n\n<pre>:distributed</pre>\n"],["href","Spreadsheet::Link","classes/Spreadsheet/Link.html#method-i-href","()","<p>The Url with the fragment appended if present.\n"],["in_row_block?","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-in_row_block-3F","(op, previous)",""],["indent","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-indent","",""],["indent_level","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-indent_level","","<p>Indentation level\n"],["insert_row","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-insert_row","(idx, cells=[])","<p>Insert a Row at <em>idx</em> (0-based) containing <em>cells</em>\n"],["inspect","Spreadsheet::Row","classes/Spreadsheet/Row.html#method-i-inspect","()",""],["inspect","Spreadsheet::Workbook","classes/Spreadsheet/Workbook.html#method-i-inspect","()",""],["inspect","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-inspect","()",""],["internal","Spreadsheet::Encodings","classes/Spreadsheet/Encodings.html#method-i-internal","(string, client=Spreadsheet.client_encoding)",""],["italic","Spreadsheet::Font","classes/Spreadsheet/Font.html#method-i-italic","","<p>You can set the following boolean Font attributes\n<p>#italic\n<p>#strikeout\n"],["ivar_name","Spreadsheet::Compatibility","classes/Spreadsheet/Compatibility.html#method-i-ivar_name","(symbol)",""],["last_row","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-last_row","()","<p>The last Row containing any data\n"],["last_row_index","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-last_row_index","()","<p>The index of the last Row containing any data\n"],["memoize?","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-memoize-3F","()",""],["merge!","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-merge-21","()",""],["method_name","Spreadsheet::Compatibility","classes/Spreadsheet/Compatibility.html#method-i-method_name","(symbol)",""],["name","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-name","()",""],["need_number?","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-need_number-3F","(cell)",""],["new","Spreadsheet::Column","classes/Spreadsheet/Column.html#method-c-new","(idx, format, opts={})",""],["new","Spreadsheet::Excel","classes/Spreadsheet/Excel.html#method-c-new","(file_path)",""],["new","Spreadsheet::Excel::Error","classes/Spreadsheet/Excel/Error.html#method-c-new","(code)",""],["new","Spreadsheet::Excel::ExcelCompatibleWorkbook","classes/Spreadsheet/Excel/ExcelCompatibleWorkbook.html#method-c-new","(file_path, *args)",""],["new","Spreadsheet::Excel::Offset","classes/Spreadsheet/Excel/Offset.html#method-c-new","(*args)",""],["new","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-c-new","(opts = {})",""],["new","Spreadsheet::Excel::SstEntry","classes/Spreadsheet/Excel/SstEntry.html#method-c-new","(opts = {})",""],["new","Spreadsheet::Excel::Workbook","classes/Spreadsheet/Excel/Workbook.html#method-c-new","(*args)",""],["new","Spreadsheet::Excel::Worksheet","classes/Spreadsheet/Excel/Worksheet.html#method-c-new","(opts = {})",""],["new","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-c-new","(writer, workbook, format=workbook.default_format, opts={})",""],["new","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-c-new","(*args)",""],["new","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-c-new","(workbook, worksheet)",""],["new","Spreadsheet::Font","classes/Spreadsheet/Font.html#method-c-new","(name, opts={})",""],["new","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-c-new","(opts={})",""],["new","Spreadsheet::Link","classes/Spreadsheet/Link.html#method-c-new","(url='', description=url, fragment=nil)",""],["new","Spreadsheet::ParseExcel::Worksheet::Cell","classes/Spreadsheet/ParseExcel/Worksheet/Cell.html#method-c-new","(value, format, row, idx)",""],["new","Spreadsheet::Row","classes/Spreadsheet/Row.html#method-c-new","(worksheet, idx, cells=[])",""],["new","Spreadsheet::Workbook","classes/Spreadsheet/Workbook.html#method-c-new","(io = nil, opts={:default_format => Format.new})",""],["new","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-c-new","(opts={})",""],["new","Spreadsheet::Writer","classes/Spreadsheet/Writer.html#method-c-new","(io_or_path)",""],["new_format_column","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-new_format_column","(column, width=nil, format=nil)",""],["num_format","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-num_format","()",""],["number_format_index","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-number_format_index","(workbook, format)",""],["offset","Spreadsheet::Excel::Offset","classes/Spreadsheet/Excel/Offset.html#method-c-offset","(*keys)",""],["opcode","Spreadsheet::Excel::Internals","classes/Spreadsheet/Excel/Internals.html#method-i-opcode","(key)",""],["open","Spreadsheet","classes/Spreadsheet.html#method-c-open","(io_or_path, mode=\"rb+\", &block)","<p>Parses a Spreadsheet Document and returns a Workbook object. At present,\nonly Excel-Documents can be …\n"],["open","Spreadsheet::Excel::Workbook","classes/Spreadsheet/Excel/Workbook.html#method-c-open","(io, opts = {})",""],["parse","Spreadsheet::ParseExcel","classes/Spreadsheet/ParseExcel.html#method-c-parse","(path)",""],["postread_workbook","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-postread_workbook","()",""],["postread_worksheet","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-postread_worksheet","(worksheet)",""],["rcompact","Array","classes/Array.html#method-i-rcompact","()",""],["rcompact!","Array","classes/Array.html#method-i-rcompact-21","()",""],["read","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read","(io)","<p>The entry-point for reading Excel-documents. Reads the Biff-Version and\nloads additional reader-methods …\n"],["read_blank","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_blank","(worksheet, addr, work)",""],["read_bof","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_bof","()",""],["read_boolerr","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_boolerr","(worksheet, addr, work)",""],["read_boundsheet","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_boundsheet","(work, pos, len)",""],["read_codepage","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_codepage","(work, pos, len)",""],["read_colinfo","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_colinfo","(worksheet, work, pos, len)",""],["read_dimensions","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_dimensions","(worksheet, work, pos, len)",""],["read_extsst","Spreadsheet::Excel::Reader::Biff8","classes/Spreadsheet/Excel/Reader/Biff8.html#method-i-read_extsst","(work, pos, len)","<p>Store the offset of extsst, so we can write a new extsst when the sst has\nchanged\n"],["read_font","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_font","(work, pos, len)",""],["read_format","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_format","(work, pos, len)",""],["read_formula","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_formula","(worksheet, addr, work)",""],["read_hlink","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_hlink","(worksheet, work, pos, len)",""],["read_hlink_string","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_hlink_string","(work, pos)",""],["read_index","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_index","(worksheet, work, pos, len)",""],["read_label","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_label","(worksheet, addr, work)",""],["read_labelsst","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_labelsst","(worksheet, addr, work)",""],["read_mulblank","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_mulblank","(worksheet, addr, work)",""],["read_mulrk","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_mulrk","(worksheet, addr, work)",""],["read_number","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_number","(worksheet, addr, work)",""],["read_rk","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_rk","(worksheet, addr, work)",""],["read_row","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_row","(worksheet, addr)",""],["read_rstring","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_rstring","(worksheet, addr, work)",""],["read_sst","Spreadsheet::Excel::Reader::Biff8","classes/Spreadsheet/Excel/Reader/Biff8.html#method-i-read_sst","(work, pos, len)","<p>Read the Shared String Table present in all Biff8 Files. This method only\nevaluates the header, the actual …\n"],["read_string","Spreadsheet::Excel::Reader::Biff5","classes/Spreadsheet/Excel/Reader/Biff5.html#method-i-read_string","(work, count_length=1)","<p>Read a String of 8-bit Characters\n"],["read_string","Spreadsheet::Excel::Reader::Biff8","classes/Spreadsheet/Excel/Reader/Biff8.html#method-i-read_string","(work, count_length=1)","<p>Read a string from the Spreadsheet, such as a Worksheet- or Font-Name, or a\nNumber-Format. See also  …\n"],["read_string_body","Spreadsheet::Excel::Reader::Biff8","classes/Spreadsheet/Excel/Reader/Biff8.html#method-i-read_string_body","(work, offset, available, wide)","<p>Read the body of a string. Returns the String (decompressed if necessary)\nand the available data (unchanged). …\n"],["read_string_header","Spreadsheet::Excel::Reader::Biff8","classes/Spreadsheet/Excel/Reader/Biff8.html#method-i-read_string_header","(work, count_length=1, offset=0)","<p>Read the header of a string. Returns the following information in an Array:\n<p>The total number of characters …\n"],["read_style","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_style","(work, pos, len)",""],["read_window2","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_window2","(worksheet, work, pos, len)",""],["read_workbook","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_workbook","()",""],["read_worksheet","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_worksheet","(worksheet, offset)",""],["read_xf","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-read_xf","(work, pos, len)",""],["reading_order","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-reading_order","",""],["replace_row","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-replace_row","(idx, *cells)","<p>Replace the Row at <em>idx</em> with the following arguments. Like\n#update_row, but truncates the Row if there …\n"],["rotation=","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-rotation-3D","(rot)","<p>Set the Text rotation Valid values: Integers from -90 to 90, or :stacked\n(sets #rotation_stacked to true) …\n"],["row","Spreadsheet::Excel::Worksheet","classes/Spreadsheet/Excel/Worksheet.html#method-i-row","(idx)",""],["row","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-row","(idx)","<p>The Row at <em>idx</em> or a new Row.\n"],["row_blocks","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-row_blocks","()",""],["row_count","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-row_count","()","<p>The number of Rows in this Worksheet which contain data.\n"],["row_updated","Spreadsheet::Excel::Worksheet","classes/Spreadsheet/Excel/Worksheet.html#method-i-row_updated","(idx, row)",""],["row_updated","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-row_updated","(idx, row)","<p>Tell Worksheet that the Row at <em>idx</em> has been updated and the\n#dimensions need to be recalculated. You …\n"],["sanitize_worksheets","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-sanitize_worksheets","(sheets)",""],["set_cell","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-set_cell","(worksheet, row, column, xf, value=nil)",""],["set_format","Spreadsheet::Row","classes/Spreadsheet/Row.html#method-i-set_format","(idx, fmt)","<p>Set the Format for the Cell at <em>idx</em> (0-based).\n"],["set_missing_row_address","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-set_missing_row_address","(worksheet, work, pos, len)",""],["set_row_address","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-set_row_address","(worksheet, work, pos, len)",""],["set_row_address","Spreadsheet::Excel::Worksheet","classes/Spreadsheet/Excel/Worksheet.html#method-i-set_row_address","(idx, opts)",""],["setup","Spreadsheet::Excel::Reader","classes/Spreadsheet/Excel/Reader.html#method-i-setup","(io)",""],["shared_string","Spreadsheet::Excel::Workbook","classes/Spreadsheet/Excel/Workbook.html#method-i-shared_string","(idx)",""],["shared_string","Spreadsheet::Excel::Worksheet","classes/Spreadsheet/Excel/Worksheet.html#method-i-shared_string","(idx)",""],["size","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-size","()",""],["sst_index","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-sst_index","(worksheet, str)",""],["sst_size","Spreadsheet::Excel::Workbook","classes/Spreadsheet/Excel/Workbook.html#method-i-sst_size","()",""],["strings","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-strings","()",""],["text_direction","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-text_direction","()",""],["text_direction","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-text_direction","","<p>Text direction Valid values: :context, :left_to_right, :right_to_left\nDefault:      :context\n"],["time?","Spreadsheet::Format","classes/Spreadsheet/Format.html#method-i-time-3F","()","<p>Is the cell formatted as a Time?\n"],["to_f","Spreadsheet::ParseExcel::Worksheet::Cell","classes/Spreadsheet/ParseExcel/Worksheet/Cell.html#method-i-to_f","()",""],["to_i","Spreadsheet::ParseExcel::Worksheet::Cell","classes/Spreadsheet/ParseExcel/Worksheet/Cell.html#method-i-to_i","()",""],["to_s","Spreadsheet::ParseExcel::Worksheet::Cell","classes/Spreadsheet/ParseExcel/Worksheet/Cell.html#method-i-to_s","(target_encoding=nil)",""],["to_uri","Spreadsheet::Link","classes/Spreadsheet/Link.html#method-i-to_uri","()","<p>Attempts to parse the output of href. May raise a URI::InvalidURIError\n"],["type","Spreadsheet::ParseExcel::Worksheet::Cell","classes/Spreadsheet/ParseExcel/Worksheet/Cell.html#method-i-type","()",""],["unicode_string","Spreadsheet::Excel::Writer::Biff8","classes/Spreadsheet/Excel/Writer/Biff8.html#method-i-unicode_string","(string, count_length=1)","<p>Encode <em>string</em> into a Biff8 Unicode String. Header and body are\nencoded separately by #_unicode_string. …\n"],["uninspect_variables","Spreadsheet::Excel::Workbook","classes/Spreadsheet/Excel/Workbook.html#method-i-uninspect_variables","()",""],["update_row","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-update_row","(idx, *cells)","<p>Updates the Row at <em>idx</em> with the following arguments.\n"],["updated_from","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-updated_from","(index)","<p>Renumbers all Rows starting at <em>idx</em> and calls #row_updated for each\nof them.\n"],["updater","Spreadsheet::Column","classes/Spreadsheet/Column.html#method-c-updater","(*keys)",""],["updater","Spreadsheet::Row","classes/Spreadsheet/Row.html#method-c-updater","(*keys)",""],["utf8","Spreadsheet::Encodings","classes/Spreadsheet/Encodings.html#method-i-utf8","(string, client=Spreadsheet.client_encoding)",""],["value","Spreadsheet::Excel::Error","classes/Spreadsheet/Excel/Error.html#method-i-value","()","<p>The String value Excel associates with an Error code\n"],["version_string","Spreadsheet::Excel::Workbook","classes/Spreadsheet/Excel/Workbook.html#method-i-version_string","()",""],["vertical_align","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-vertical_align","()",""],["weight","Spreadsheet::Font","classes/Spreadsheet/Font.html#method-i-weight","","<p>Font weight Valid values: :normal, :bold or any positive Integer. In Excel:\n\n<pre>100 &lt;= weight &lt;= 1000\n:bold ...</pre>\n"],["wide","Spreadsheet::Excel::Reader::Biff8","classes/Spreadsheet/Excel/Reader/Biff8.html#method-i-wide","(string)","<p>Insert null-characters into a compressed UTF-16 string\n"],["worksheet","Spreadsheet::Workbook","classes/Spreadsheet/Workbook.html#method-i-worksheet","(idx)","<p>The Worksheet at <em>idx</em>, or - if <em>idx</em> is a String - the\nWorksheet with name == <em>idx</em>\n"],["worksheets","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-worksheets","(workbook)",""],["write","Spreadsheet::Workbook","classes/Spreadsheet/Workbook.html#method-i-write","(io_path_or_writer)","<p>Write this Workbook to a File, IO Stream or Writer Object. The latter will\nmake more sense once there …\n"],["write","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-write","(row, col, data=nil, format=nil)",""],["write","Spreadsheet::Writer","classes/Spreadsheet/Writer.html#method-i-write","(workbook)",""],["write_blank","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_blank","(row, idx)","<p>Write a blank cell\n"],["write_bof","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_bof","(workbook, writer, type)",""],["write_bof","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_bof","()",""],["write_bookbool","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_bookbool","(workbook, writer)",""],["write_boolerr","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_boolerr","(row, idx)","<p>Write a cell with a Boolean or Error value\n"],["write_boundsheets","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_boundsheets","(workbook, writer, offset)",""],["write_calccount","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_calccount","()",""],["write_cell","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_cell","(type, row, idx, *args)",""],["write_cellblocks","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_cellblocks","(row)",""],["write_changes","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_changes","(workbook, io)","<p>Copy unchanged data verbatim, adjust offsets and write new records for\nchanged data.\n"],["write_changes","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_changes","(reader, endpos, sst_status)",""],["write_colinfo","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_colinfo","(bunch)",""],["write_colinfos","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_colinfos","()",""],["write_column","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-write_column","(row, col, data=nil, format=nil)",""],["write_datemode","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_datemode","(workbook, writer)",""],["write_defaultrowheight","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_defaultrowheight","()",""],["write_defcolwidth","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_defcolwidth","()",""],["write_dimensions","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_dimensions","()",""],["write_dsf","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_dsf","(workbook, writer)",""],["write_encoding","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_encoding","(workbook, writer)",""],["write_eof","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_eof","(workbook, writer)",""],["write_eof","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_eof","()",""],["write_extsst","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_extsst","(workbook, offsets, writer)",""],["write_font","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_font","(workbook, writer, font)",""],["write_fonts","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_fonts","(workbook, writer)",""],["write_formats","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_formats","(workbook, writer)",""],["write_formula","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_formula","(row, idx)","<p>Write a cell with a Formula. May write an additional String record\ndepending on the stored result of …\n"],["write_from_scratch","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_from_scratch","(workbook, io)","<p>Write a new Excel file.\n"],["write_from_scratch","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_from_scratch","()","<p>Write a new Worksheet.\n"],["write_hlink","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_hlink","(row, col, link)",""],["write_hyperlink_table","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_hyperlink_table","()",""],["write_iteration","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_iteration","()",""],["write_labelsst","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_labelsst","(row, idx)","<p>Write a cell with a String value. The String must have been stored in the\nShared String Table.\n"],["write_mulblank","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_mulblank","(row, idx, multiples)","<p>Write multiple consecutive blank cells.\n"],["write_mulrk","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_mulrk","(row, idx, multiples)","<p>Write multiple consecutive cells with RK values (see #write_rk)\n"],["write_multiples","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_multiples","(row, idx, multiples)",""],["write_number","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_number","(row, idx)","<p>Write a cell with a 64-bit double precision Float value\n"],["write_op","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-write_op","(writer, op, *args)",""],["write_op","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_op","(writer, op, *args)",""],["write_op","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_op","(op, *args)",""],["write_password","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_password","(workbook, writer)",""],["write_placeholder","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_placeholder","(writer, op, value=0x0000, fmt='v')",""],["write_precision","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_precision","(workbook, writer)",""],["write_protect","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_protect","(workbook, writer)",""],["write_refmode","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_refmode","()",""],["write_refreshall","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_refreshall","(workbook, writer)",""],["write_rk","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_rk","(row, idx)","<p>Write a cell with a Numeric or Date value.\n"],["write_row","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_row","(row)",""],["write_row","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-write_row","(row, col, data=nil, format=nil)",""],["write_rowblock","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_rowblock","(block)",""],["write_rows","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_rows","()",""],["write_saverecalc","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_saverecalc","()",""],["write_sst","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_sst","(workbook, writer, offset)",""],["write_sst_changes","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_sst_changes","(workbook, writer, offset, total, strings)",""],["write_string_part","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_string_part","(writer, op, data, wide)",""],["write_styles","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_styles","(workbook, writer)",""],["write_tabid","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_tabid","(workbook, writer)",""],["write_url","Spreadsheet::Worksheet","classes/Spreadsheet/Worksheet.html#method-i-write_url","(row, col, url, string=url, format=nil)",""],["write_window1","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_window1","(workbook, writer)",""],["write_window2","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_window2","()",""],["write_workbook","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_workbook","(workbook, io)","<p>The main writer method. Calls #write_from_scratch or #write_changes\ndepending on the class and state …\n"],["write_wsbool","Spreadsheet::Excel::Writer::Worksheet","classes/Spreadsheet/Excel/Writer/Worksheet.html#method-i-write_wsbool","()",""],["write_xf","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-write_xf","(writer, type=@opts[:type])",""],["write_xfs","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-write_xfs","(workbook, writer)",""],["writer","Spreadsheet","classes/Spreadsheet.html#method-c-writer","(io_or_path, type=Excel)","<p>Returns a Writer object for the specified path. At present, only the\nExcel-Writer is available.\n"],["writer","Spreadsheet::Workbook","classes/Spreadsheet/Workbook.html#method-i-writer","(io_or_path, type=Excel, version=self.version)","<p>Returns a new instance of the default Writer class for this Workbook (can\nonly be an Excel::Writer::Workbook …\n"],["xf_align","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-xf_align","()",""],["xf_borders","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-xf_borders","()",""],["xf_brdcolors","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-xf_brdcolors","()",""],["xf_indent","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-xf_indent","()",""],["xf_index","Spreadsheet::Excel::Writer::Workbook","classes/Spreadsheet/Excel/Writer/Workbook.html#method-i-xf_index","(workbook, format)",""],["xf_pattern","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-xf_pattern","()",""],["xf_rotation","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-xf_rotation","()",""],["xf_type_prot","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-xf_type_prot","(type)",""],["xf_used_attr","Spreadsheet::Excel::Writer::Format","classes/Spreadsheet/Excel/Writer/Format.html#method-i-xf_used_attr","()",""],["GUIDE","","files/spreadsheet/GUIDE_txt.html","","<p>Getting Started with Spreadsheet\n<p>This guide is meant to get you started using Spreadsheet. By the end …\n"],["README","","files/spreadsheet/README_txt.html","","<p>Last Update: 17.09.2009, 16.32 - hwyss\n<p>Spreadsheet\n<p>spreadsheet.rubyforge.org scm.ywesee.com/spreadsheet …\n"],["Rakefile","","files/spreadsheet/Rakefile.html","","<p># -*- ruby -*-\n<p>require ‘rubygems’ require ‘hoe’ require ‘./lib/spreadsheet.rb’\n<p>ENV = ‘-c utf8’\n"]]}}